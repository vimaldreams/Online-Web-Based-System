<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BreadCrumbTxt" xml:space="preserve">
    <value>Vous êtes ici:</value>
  </data>
  <data name="btnBacktoMenuText" xml:space="preserve">
    <value>Back to main menu</value>
  </data>
  <data name="btnDownloadText" xml:space="preserve">
    <value>Download(PDF)</value>
  </data>
  <data name="btnMaxPreiewText" xml:space="preserve">
    <value>Maximize Preview</value>
  </data>
  <data name="btnOrderPrintsText" xml:space="preserve">
    <value>Order Prints</value>
  </data>
  <data name="btnUpdatePreviewText" xml:space="preserve">
    <value>Update Preview</value>
  </data>
  <data name="ChangebtnText" xml:space="preserve">
    <value>Change logo</value>
  </data>
  <data name="ConfirmBackText" xml:space="preserve">
    <value>Are you sure you want to go back to Main Menu ?</value>
  </data>
  <data name="CustomAreaTxt" xml:space="preserve">
    <value>Editable text -</value>
  </data>
  <data name="CustomImageTxt" xml:space="preserve">
    <value>Your logo -</value>
  </data>
  <data name="CustomizeAreaTxt" xml:space="preserve">
    <value>Editable Text -</value>
  </data>
  <data name="CustomizeImgText1" xml:space="preserve">
    <value>Note: Max. 800 * 800 pixels, RGB Mode, JPG or PNG</value>
  </data>
  <data name="CustomizeMsgText" xml:space="preserve">
    <value>Complete the fields for your customized document. Press &lt;strong&gt;Update Preview&lt;/strong&gt; to see an updated pdf, press &lt;strong&gt;Maximize Preview&lt;/strong&gt; to open the pdf preview document in a preview window, press &lt;strong&gt;Download&lt;/strong&gt; to download the pdf document or &lt;strong&gt;Order Prints&lt;/strong&gt; to send the document to printshop.</value>
  </data>
  <data name="CustomizeMsgText1" xml:space="preserve">
    <value>Your Address, Phone, Web URL</value>
  </data>
  <data name="CustomizeMsgText2" xml:space="preserve">
    <value>"
Note: Max. &lt;maxlines&gt; lines, &lt;maxchars&gt; characters per line"</value>
  </data>
  <data name="CustomizeMsgText3" xml:space="preserve">
    <value>Your Company Name</value>
  </data>
  <data name="CustomizeMsgText4" xml:space="preserve">
    <value>Your Company Name and Phone Number</value>
  </data>
  <data name="CustomizeMsgText5" xml:space="preserve">
    <value>Your Phone Number and Web URL</value>
  </data>
  <data name="DialogCancelbtnText" xml:space="preserve">
    <value>cancel</value>
  </data>
  <data name="DialogUploadbtnText" xml:space="preserve">
    <value>upload</value>
  </data>
  <data name="EditDocumentMsg" xml:space="preserve">
    <value>You are customizing</value>
  </data>
  <data name="EditHeaderLabel" xml:space="preserve">
    <value>Edit customized document</value>
  </data>
  <data name="MaxCharErrorMessage" xml:space="preserve">
    <value>Line  &lt;linecount&gt; - Max number of characters exceeded.</value>
  </data>
  <data name="MaxLineErrorMessage" xml:space="preserve">
    <value>Max number of lines exceeded in the Editable Text.</value>
  </data>
  <data name="NoDetailsLabel" xml:space="preserve">
    <value>We advise that you edit your &lt;I&gt;Contact Details, Customizable Details and your Company Logo&lt;/i&gt; from the homepage before using this tool. You only need to update these details once.</value>
  </data>
  <data name="Page" xml:space="preserve">
    <value>Page</value>
  </data>
  <data name="PreparingReport" xml:space="preserve">
    <value>We are preparing your report, please wait...</value>
  </data>
  <data name="SavingTxt" xml:space="preserve">
    <value>saving...</value>
  </data>
  <data name="SmartCustomizeMsgText" xml:space="preserve">
    <value>Complete the fields for your customized document. Press &lt;strong&gt;Update Preview&lt;/strong&gt; to see an updated pdf, press &lt;strong&gt;Download&lt;/strong&gt; to download the pdf document.</value>
  </data>
  <data name="SmartNoDetailMsgText" xml:space="preserve">
    <value>We advise that you update your &lt;I&gt;Contact Details, Customizable Details and your Company Logo&lt;/I&gt; from the page before downloading the Collateral.</value>
  </data>
  <data name="CustomizeMsgText6" xml:space="preserve">
    <value>characters maximum approx</value>
  </data>
  <data name="CustomizeImgText2" xml:space="preserve">
    <value>In page image: &lt;width&gt; x &lt;height&gt; pixels, with 90 px rounded corners, 300 dpi, CMYK colour mode</value>
  </data>
  <data name="ChangebtnText1" xml:space="preserve">
    <value>Change image</value>
  </data>
  <data name="MultiImageLabel" xml:space="preserve">
    <value>Please select from the images below and upload</value>
  </data>
</root>