@model PagedList.IPagedList<CollateralCreatorAdminWeb.Models.FontUsage>

@{
    ViewBag.Title = "Font Usage";
}

@section AddToHead{
    <link href="@Url.Content("~/Content/Grid.css")" rel="stylesheet" type="text/css" />   
}

<h2>Font Usage</h2>

<p>
    @*@Html.ActionLink("Create New", "Create", new { searchString = ViewBag.currentFilter }) | *@ 
    @Html.ActionLink("Home", "Index", "Home")
</p>

@using (Html.BeginForm())
{
    <p>Find by template name: @Html.TextBox("searchString", ViewBag.CurrentFilter as string)  
                <input type="submit" value="Search" class="button"/>
    </p>
}
<table>
    <tr>
        <th>
            TemplateID
        </th>
        <th>
           FontName
        </th>        
        <th>
            PartnerBranded
        </th>
        <th>
           TextAreaID
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.TemplateID)
        </td>
        <td>
            @*@Html.DisplayFor(modelItem => item.Font.Name)*@
            @Html.ActionLink(item.Font.Name, "Index", "Font", new {fontID = item.FontID,  templateID = item.TemplateID, currentFilter = ViewBag.CurrentFilter }, null)
        </td>        
        <td>
            @Html.DisplayFor(modelItem => item.PartnerBranded)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TextAreaID)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new {  id=item.FontID, searchString = ViewBag.currentFilter  }) |
            @Html.ActionLink("Delete", "Delete", new {  id=item.FontID, searchString = ViewBag.currentFilter  })
        </td>
    </tr>
}

</table>

<br />

Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount &nbsp;
     
@if (Model.HasPreviousPage)
{
    @Html.Raw("&nbsp;");
    @Html.ActionLink("First page ", "Index", new { page = 1 })
    @Html.Raw("&nbsp;");
    @Html.ActionLink("Previous ", "Index", new { page = Model.PageNumber - 1 })
}
else
{
    @Html.Raw("&nbsp;");
    @: First page
    @Html.Raw("&nbsp;");
    @: Previous 
}
     
@if (Model.HasNextPage)
{
    @Html.Raw("&nbsp;");
    @Html.ActionLink("Next ", "Index", new { page = Model.PageNumber + 1 })
    @Html.Raw("&nbsp;");
    @Html.ActionLink("Last page ", "Index", new { page = Model.PageCount })
}
else
{
    @Html.Raw("&nbsp;");
    @: Next 
    @Html.Raw("&nbsp;")
    @: Last page 
}
